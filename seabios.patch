diff -Naur xen/tools/firmware/Makefile xen-a/tools/firmware/Makefile
--- xen/tools/firmware/Makefile	2013-04-04 20:51:30.630060426 -0600
+++ xen-a/tools/firmware/Makefile	2013-04-04 20:37:54.820060432 -0600
@@ -20,6 +20,7 @@
 seabios-dir:
 	GIT=$(GIT) $(XEN_ROOT)/scripts/git-checkout.sh $(SEABIOS_UPSTREAM_URL) $(SEABIOS_UPSTREAM_TAG) seabios-dir
 	cp seabios-config seabios-dir/.config;
+	patch -d seabios-dir -p1 -i ../seabios-mac-20130223.patch
 
 .PHONY: all
 all: $(SUBDIRS-y)
diff -Naur xen/tools/firmware/seabios-config xen-a/tools/firmware/seabios-config
--- xen/tools/firmware/seabios-config	2013-04-04 20:51:30.643393761 -0600
+++ xen-a/tools/firmware/seabios-config	2013-04-04 20:36:16.990060430 -0600
@@ -1,13 +1,16 @@
 #
 # Automatically generated make config: don't edit
 # SeaBIOS Configuration
-# Thu Jan  3 17:25:45 2013
+# Thu Apr  4 20:14:55 2013
 #
 
 #
 # General Features
 #
 # CONFIG_COREBOOT is not set
+CONFIG_QEMU=y
+# CONFIG_CSM is not set
+CONFIG_QEMU_HARDWARE=y
 CONFIG_XEN=y
 CONFIG_THREADS=y
 # CONFIG_THREAD_OPTIONROMS is not set
@@ -15,6 +18,7 @@
 CONFIG_BOOTMENU=y
 # CONFIG_BOOTSPLASH is not set
 CONFIG_BOOTORDER=y
+CONFIG_ENTRY_EXTRASTACK=y
 
 #
 # Hardware support
@@ -27,6 +31,7 @@
 CONFIG_VIRTIO_SCSI=y
 CONFIG_ESP_SCSI=y
 CONFIG_LSI_SCSI=y
+CONFIG_MEGASAS=y
 CONFIG_FLOPPY=y
 CONFIG_PS2PORT=y
 CONFIG_USB=y
@@ -42,6 +47,7 @@
 CONFIG_LPT=y
 CONFIG_USE_SMM=y
 CONFIG_MTRR_INIT=y
+CONFIG_PMTIMER=y
 
 #
 # BIOS interfaces
@@ -70,6 +76,7 @@
 CONFIG_MPTABLE=y
 CONFIG_SMBIOS=y
 CONFIG_ACPI=y
+CONFIG_ACPI_DSDT=y
 
 #
 # VGA ROM
diff -Naur xen/tools/firmware/seabios-mac-20130223.patch xen-a/tools/firmware/seabios-mac-20130223.patch
--- xen/tools/firmware/seabios-mac-20130223.patch	1969-12-31 17:00:00.000000000 -0700
+++ xen-a/tools/firmware/seabios-mac-20130223.patch	2013-04-04 20:36:16.990060430 -0600
@@ -0,0 +1,378 @@
+###############################################################################
+# Fixed DSDT entry for HPET; add entry for AppleSMC (G. Somlo <somlo@cmu.edu>)
+###############################################################################
+diff --git a/src/acpi-dsdt-hpet.dsl b/src/acpi-dsdt-hpet.dsl
+index f33e527..323818e 100644
+--- a/src/acpi-dsdt-hpet.dsl
++++ b/src/acpi-dsdt-hpet.dsl
+@@ -23,14 +23,23 @@ Scope(\_SB) {
+             }
+             Return (0x0F)
+         }
+-        Name(_CRS, ResourceTemplate() {
+-#if 0       /* This makes WinXP BSOD for not yet figured reasons. */
+-            IRQNoFlags() {2, 8}
+-#endif
++        Name(RESP, ResourceTemplate() {
+             Memory32Fixed(ReadOnly,
+                 0xFED00000,         // Address Base
+                 0x00000400,         // Address Length
+                 )
+         })
++        Name(RESI, ResourceTemplate() {
++            IRQNoFlags() {2, 8}
++        })
++        Method(_CRS, 0) {
++            Store(\_SB.PCI0.ISA.SMC._STA(), Local0)
++            If (LEqual(Local0, 0x0B)) {        // AppleSMC present, add IRQ
++                ConcatenateResTemplate(RESP, RESI, Local1)
++                Return (Local1)
++            } else {
++                Return (RESP)
++            }
++        }
+     }
+ }
+diff --git a/src/acpi-dsdt-isa.dsl b/src/acpi-dsdt-isa.dsl
+index 23761db..6f2aeb4 100644
+--- a/src/acpi-dsdt-isa.dsl
++++ b/src/acpi-dsdt-isa.dsl
+@@ -1,6 +1,28 @@
+ /* Common legacy ISA style devices. */
+ Scope(\_SB.PCI0.ISA) {
+ 
++    Device (SMC) {
++        Name(_HID, EisaId("APP0001"))
++        OperationRegion(SMC, SystemIO, 0x0300, 0x20)
++        Field(SMC, ByteAcc, NoLock, Preserve) {
++            Offset(0x04),
++            CMDP, 8,
++        }
++        Method(_STA, 0) {
++//            Store(0x10, CMDP)    // APPLESMC_READ_CMD
++//            Store(CMDP, Local0)
++//            If (LEqual(Local0, 0x0c)) {
++                Return (0x0B)
++//            } Else {
++//                Return (0x00)
++//            }
++        }
++        Name (_CRS, ResourceTemplate () {
++            IO (Decode16, 0x0300, 0x0300, 0x01, 0x20)
++            IRQNoFlags() { 6 }
++        })
++    }
++
+     Device(RTC) {
+         Name(_HID, EisaId("PNP0B00"))
+         Name(_CRS, ResourceTemplate() {
+###############################################################################
+# 70-more-smbios.patch; (Alexander Graf and/or Rene Rebe)
+# GLS: this patch enables "About This Mac" functionality in OS X, which would
+#      otherwise result in Finder crashing.
+###############################################################################
+diff --git a/src/smbios.c b/src/smbios.c
+index fd63afb..a85c236 100644
+--- a/src/smbios.c
++++ b/src/smbios.c
+@@ -37,7 +37,7 @@ smbios_entry_point_setup(u16 max_structure_size,
+     memcpy(ep->anchor_string, "_SM_", 4);
+     ep->length = 0x1f;
+     ep->smbios_major_version = 2;
+-    ep->smbios_minor_version = 4;
++    ep->smbios_minor_version = 5;
+     ep->max_structure_size = max_structure_size;
+     ep->entry_point_revision = 0;
+     memset(ep->formatted_area, 0, 5);
+@@ -46,7 +46,7 @@ smbios_entry_point_setup(u16 max_structure_size,
+     ep->structure_table_length = structure_table_length;
+     ep->structure_table_address = (u32)finaltable;
+     ep->number_of_structures = number_of_structures;
+-    ep->smbios_bcd_revision = 0x24;
++    ep->smbios_bcd_revision = 0x25;
+ 
+     ep->checksum -= checksum(ep, 0x10);
+ 
+@@ -171,8 +171,8 @@ smbios_init_type_0(void *start)
+     p->header.length = sizeof(struct smbios_type_0);
+     p->header.handle = 0;
+ 
+-    load_str_field_with_default(0, vendor_str, BUILD_APPNAME);
+-    load_str_field_with_default(0, bios_version_str, BUILD_APPNAME);
++    load_str_field_with_default(0, vendor_str, "Apple Inc.");
++    load_str_field_with_default(0, bios_version_str, "IM81.88Z.00C1.B00.0802091538");
+ 
+     p->bios_starting_address_segment = 0xe800;
+ 
+@@ -183,8 +183,10 @@ smbios_init_type_0(void *start)
+     if (!get_field(0, offsetof(struct smbios_type_0, bios_characteristics),
+                    &p->bios_characteristics)) {
+         memset(p->bios_characteristics, 0, 8);
+-        /* BIOS characteristics not supported */
+-        p->bios_characteristics[0] = 0x08;
++        p->bios_characteristics[0] = 0x80;
++        p->bios_characteristics[1] = 0x98;
++        p->bios_characteristics[2] = 0x09;
++        p->bios_characteristics[3] = 0x78;
+     }
+ 
+     if (!get_field(0, offsetof(struct smbios_type_0,
+@@ -219,18 +221,18 @@ smbios_init_type_1(void *start)
+     p->header.length = sizeof(struct smbios_type_1);
+     p->header.handle = 0x100;
+ 
+-    load_str_field_with_default(1, manufacturer_str, BUILD_APPNAME);
+-    load_str_field_with_default(1, product_name_str, BUILD_APPNAME);
+-    load_str_field_or_skip(1, version_str);
+-    load_str_field_or_skip(1, serial_number_str);
++    load_str_field_with_default(1, manufacturer_str, "Apple Inc.");
++    load_str_field_with_default(1, product_name_str, "iMac8,1");
++    load_str_field_with_default(1, version_str, "1.0");
++    load_str_field_with_default(1, serial_number_str, "SystemSerial#");
+ 
+     if (!get_field(1, offsetof(struct smbios_type_1, uuid), &p->uuid))
+         memset(p->uuid, 0, 16);
+ 
+     set_field_with_default(1, wake_up_type, 0x06); /* power switch */
+ 
+-    load_str_field_or_skip(1, sku_number_str);
+-    load_str_field_or_skip(1, family_str);
++    load_str_field_with_default(1, sku_number_str, "SKU#");
++    load_str_field_with_default(1, family_str, "Mac");
+ 
+     *end = 0;
+     end++;
+@@ -242,6 +244,44 @@ smbios_init_type_1(void *start)
+     return end;
+ }
+ 
++/* Type 2 -- Base Board */
++static void *
++smbios_init_type_2(void *start)
++{
++    struct smbios_type_2 *p = (struct smbios_type_2 *)start;
++
++    p->header.type = 2;
++    p->header.length = sizeof(struct smbios_type_2);
++    p->header.handle = 0x300;
++
++    p->manufacturer_str = 1;
++    p->product_str = 2;
++    p->version_str = 3;
++    p->serial_number_str = 4;
++    p->asset_tag_number_str = 0;
++    p->feature_flags = 1; /* Motherboard */
++    p->location_str = 0;
++    p->chassis_handle = 0x301;
++    p->board_type = 0x0a; /* Motherboard */
++    p->contained_element_count = 0;
++
++    start += sizeof(struct smbios_type_2);
++    memcpy((char *)start, "Apple Inc.", sizeof("Apple Inc."));
++    start += sizeof("Apple Inc.");
++
++    memcpy((char *)start, "Mac-F227BEC8", sizeof("Mac-F227BEC8"));
++    start += sizeof("Mac-F227BEC8");
++
++    memcpy((char *)start, "VERSION", sizeof("VERSION"));
++    start += sizeof("VERSION");
++
++    memcpy((char *)start, "BoardSerial#", sizeof("BoardSerial#"));
++    start += sizeof("BoardSerial#");
++
++    *((u8 *)start) = 0;
++    return start + 1;
++}
++
+ /* Type 3 -- System Enclosure */
+ static void *
+ smbios_init_type_3(void *start)
+@@ -253,13 +293,13 @@ smbios_init_type_3(void *start)
+ 
+     p->header.type = 3;
+     p->header.length = sizeof(struct smbios_type_3);
+-    p->header.handle = 0x300;
++    p->header.handle = 0x301;
+ 
+     load_str_field_with_default(3, manufacturer_str, BUILD_APPNAME);
+     set_field_with_default(3, type, 0x01); /* other */
+ 
+-    load_str_field_or_skip(3, version_str);
+-    load_str_field_or_skip(3, serial_number_str);
++    load_str_field_with_default(3, version_str, "VERSION");
++    load_str_field_with_default(3, serial_number_str, "ChassisSerial#");
+     load_str_field_or_skip(3, asset_tag_number_str);
+ 
+     set_field_with_default(3, boot_up_state, 0x03); /* safe */
+@@ -322,7 +362,7 @@ smbios_init_type_4(void *start, unsigned int cpu_number)
+ 
+     load_str_field_or_skip(4, processor_version_str);
+     set_field_with_default(4, voltage, 0);
+-    set_field_with_default(4, external_clock, 0);
++    set_field_with_default(4, external_clock, 800);
+ 
+     set_field_with_default(4, max_speed, 2000);
+     set_field_with_default(4, current_speed, 2000);
+@@ -331,9 +371,16 @@ smbios_init_type_4(void *start, unsigned int cpu_number)
+     set_field_with_default(4, processor_upgrade, 0x01); /* other */
+ 
+     /* cache information structure not provided */
+-    p->l1_cache_handle =  0xffff;
+-    p->l2_cache_handle =  0xffff;
+-    p->l3_cache_handle =  0xffff;
++    p->l1_cache_handle = 0x600 + cpu_number * 2;
++    p->l2_cache_handle = 0x600 + cpu_number * 2 + 1;
++    p->l3_cache_handle = 0xffff; /* cache information structure not provided */
++
++    p->asset_tag_str = 0;
++    p->part_no_str = 0;
++    p->core_count = 2;
++    p->core_enabled = 2;
++    p->thread_count = 2;
++    p->processor_characteristics = 0;
+ 
+     *end = 0;
+     end++;
+@@ -345,6 +392,35 @@ smbios_init_type_4(void *start, unsigned int cpu_number)
+     return end;
+ }
+ 
++static void *
++smbios_init_type_7(void *start, unsigned int cpu_number, unsigned int level)
++{
++    struct smbios_type_7 *p = (struct smbios_type_7 *)start;
++
++    p->header.type = 7;
++    p->header.length = sizeof(struct smbios_type_7);
++    p->header.handle = 0x600 + cpu_number * 2 + level - 1;
++
++    p->socket_designation_str = 1;
++    p->cache_config = 0x80 & (level - 1); /* enabled + level */
++    p->max_cache_size = p->installed_cache_size =
++	level == 1 ? 64 : 512; /* 1k granularity */
++    p->supported_sram_type = p->current_sram_type =
++        0x08 & 0x10 & 0x80; /* Burst, Pipeline Burst, Asynchronous */
++    p->cache_speed = 0; /* in ns, 0 for unknown */
++    p->error_correction = 0x05; /* Single-bit ECC */
++    p->system_cache_type = 0x05; /* Unified */
++    p->associativity = 0x06; /* Fully Associative */
++
++    start += sizeof(struct smbios_type_7);
++
++    snprintf((char*)start, 9, "L%d Cache", level);
++    start += 9;
++
++    *((u8 *)start) = 0;
++    return start + 1;
++}
++
+ /* Type 16 -- Physical Memory Array */
+ static void *
+ smbios_init_type_16(void *start, u32 memory_size_mb, int nr_mem_devs)
+@@ -385,6 +461,8 @@ smbios_init_type_17(void *start, u32 size_mb, int instance)
+     p->header.length = sizeof(struct smbios_type_17);
+     p->header.handle = 0x1100 + instance;
+ 
++    p->speed = 667;
++    p->attributes = 0;
+     p->physical_memory_array_handle = 0x1000;
+     set_field_with_default(17, total_width, 64);
+     set_field_with_default(17, data_width, 64);
+@@ -404,7 +482,10 @@ smbios_init_type_17(void *start, u32 size_mb, int instance)
+     end += strlen(name) + 1;
+     p->device_locator_str = ++str_index;
+ 
+-    load_str_field_or_skip(17, bank_locator_str);
++    load_str_field_with_default(17, bank_locator_str, "Bank 0");
++    load_str_field_with_default(17, manufactor_str, "Manufactor");
++    load_str_field_with_default(17, serial_str, "MemSerial#");
++
+     set_field_with_default(17, memory_type, 0x07); /* RAM */
+     set_field_with_default(17, type_detail, 0);
+ 
+@@ -531,11 +612,15 @@ smbios_setup(void)
+ 
+     add_struct(0, p);
+     add_struct(1, p);
++    add_struct(2, p);
+     add_struct(3, p);
+ 
+     int cpu_num;
+-    for (cpu_num = 1; cpu_num <= MaxCountCPUs; cpu_num++)
++    for (cpu_num = 1; cpu_num <= MaxCountCPUs; cpu_num++) {
+         add_struct(4, p, cpu_num);
++        add_struct(7, p, cpu_num, 1); /* L1 & L2 cache */
++        add_struct(7, p, cpu_num, 2);
++    }
+ 
+     int ram_mb = (RamSize + RamSizeOver4G) >> 20;
+     int nr_mem_devs = (ram_mb + 0x3fff) >> 14;
+diff --git a/src/smbios.h b/src/smbios.h
+index a4c1444..9838719 100644
+--- a/src/smbios.h
++++ b/src/smbios.h
+@@ -62,6 +62,22 @@ struct smbios_type_1 {
+     u8 family_str;
+ } PACKED;
+ 
++/* SMBIOS type 2 - Base Board */
++struct smbios_type_2 {
++    struct smbios_structure_header header;
++    u8 manufacturer_str;
++    u8 product_str;
++    u8 version_str;
++    u8 serial_number_str;
++    u8 asset_tag_number_str;
++    u8 feature_flags;
++    u8 location_str;
++    u16 chassis_handle;
++    u8 board_type;
++    u8 contained_element_count;
++    // contained elements follow
++} PACKED;
++
+ /* SMBIOS type 3 - System Enclosure (v2.3) */
+ struct smbios_type_3 {
+     struct smbios_structure_header header;
+@@ -99,6 +115,28 @@ struct smbios_type_4 {
+     u16 l1_cache_handle;
+     u16 l2_cache_handle;
+     u16 l3_cache_handle;
++    u8 serial_str;
++    u8 asset_tag_str;
++    u8 part_no_str;
++    u8 core_count;
++    u8 core_enabled;
++    u8 thread_count;
++    u16 processor_characteristics;
++} PACKED;
++
++/* SMBIOS type 7 - Cache Information (v2.0) */
++struct smbios_type_7 {
++    struct smbios_structure_header header;
++    u8 socket_designation_str;
++    u16 cache_config;
++    u16 max_cache_size;
++    u16 installed_cache_size;
++    u16 supported_sram_type;
++    u16 current_sram_type;
++    u8 cache_speed;
++    u8 error_correction;
++    u8 system_cache_type;
++    u8 associativity;
+ } PACKED;
+ 
+ /* SMBIOS type 16 - Physical Memory Array
+@@ -130,6 +168,12 @@ struct smbios_type_17 {
+     u8 bank_locator_str;
+     u8 memory_type;
+     u16 type_detail;
++    u16 speed;
++    u8 manufactor_str;
++    u8 serial_str;
++    u8 asset_tag_str;
++    u8 part_no_str;
++    u8 attributes;
+ } PACKED;
+ 
+ /* SMBIOS type 19 - Memory Array Mapped Address */
